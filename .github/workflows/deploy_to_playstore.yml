name: Deploy to Play Store
on:
  workflow_dispatch:
    # Enable manual run
    inputs:
      lane:
        description: 'Fastlane lane to use (beta OR promote_to_production OR production)'
        required: true
        default: 'beta'
      version:
        description: 'Version for creating GH release. It does not change the version in the app itself.'
        required: true
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  fastlane-deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with stable channel
        uses: subosito/flutter-action@v1.5.0
        with:
          channel: stable
      - run: flutter doctor -v

      - name: Checkout code
        uses: actions/checkout@v2

      # Fixme: https://github.com/meditohq/medito-app/issues/151
      - name: Create auth.dart
        run: sh ./.github/scripts/create_auth_dart.sh
        env:
          BASE_URL: ${{ secrets.AUTH_BASE_URL }}
          SENTRY_URL: ${{ secrets.AUTH_SENTRY_URL }}
          CONTENT_TOKEN: ${{ secrets.AUTH_CONTENT_TOKEN }}
          INIT_TOKEN: ${{ secrets.AUTH_INIT_TOKEN }}

      - name: Get dependencies
        run: flutter pub get
      - name: Analyze code
        run: flutter analyze --no-fatal-warnings --no-fatal-infos .
      - name: Run test
        run: flutter test

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
          bundler-cache: true
          working-directory: android

      - name: Create Upload Keystore file
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/meditokey.jks
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
        working-directory: android

      # Build and deploy with Fastlane (by default, to beta track) ðŸš€.
      # Naturally, promote_to_production only deploys.
      - run: bundle exec fastlane ${{ github.event.inputs.lane || 'beta' }}
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
          FCI_KEYSTORE_PATH: 'meditokey.jks' # The file is created in the previous step
          FCI_KEY_ALIAS: ${{ secrets.FCI_KEY_ALIAS }}
          FCI_KEY_PASSWORD: ${{ secrets.FCI_KEY_PASSWORD }}
          FCI_KEYSTORE_PASSWORD: ${{ secrets.FCI_KEYSTORE_PASSWORD }}
        working-directory: android
      # The aab bundle cannot install easily on device. Build an APK to publish on GH
      - name: Build APK
        run: flutter build apk -v
        env:
          FCI_KEYSTORE_PATH: 'meditokey.jks' # The file is created in the previous step
          FCI_KEY_ALIAS: ${{ secrets.FCI_KEY_ALIAS }}
          FCI_KEY_PASSWORD: ${{ secrets.FCI_KEY_PASSWORD }}
          FCI_KEYSTORE_PASSWORD: ${{ secrets.FCI_KEYSTORE_PASSWORD }}
      - name: Create release version
        id: release_version
        run: echo "::set-output name=version::$(echo ${{ github.event.inputs.version || github.ref }} | sed 's#refs/tags/##')"
      - name: Upload app APK to github action artifact
        uses: actions/upload-artifact@v2
        with:
          name: medito-${{ steps.release_version.outputs.version }}.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Rename the output APK
        run: mv app-release.apk medito-${{ steps.release_version.outputs.version }}.apk
        working-directory: build/app/outputs/flutter-apk
      - name: Create GH Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            # Medito ${{ steps.release_version.outputs.version }}
            ## What's New?
            NOTE: If you install Medito app using APK file, please make sure to verify that the APK file is signed by Medito Foundation. See [VERIFY_APK](VERIFY_APK.md) for more information.
          draft: true
          files: build/app/outputs/flutter-apk/medito-${{ steps.release_version.outputs.version }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')

def configured = true
try {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} catch (IOException e) {
    configured = false
}

static int generateVersionCode(String versionName) {
    def parts = versionName.split("\\.").collect { it.toInteger() }
    return parts[0] * 10000 + parts[1] * 100 + parts[2]
}
project.ext {
    // TODO(YOU): Create release keys and a `keystore.properties` file. See
    // `example/README.md` for more info and `keystore.example.properties` for an
    // example.
    APP_ID = keystoreProperties['appId']
    KEYSTORE_STORE_FILE = configured ? rootProject.file(keystoreProperties['storeFile']) : null
    KEYSTORE_STORE_PASSWORD = keystoreProperties['storePassword']
    KEYSTORE_KEY_ALIAS = keystoreProperties['keyAlias']
    KEYSTORE_KEY_PASSWORD = keystoreProperties['keyPassword']
    VERSION_CODE = generateVersionCode(flutterVersionName)
    VERSION_NAME = flutterVersionName
}

if (project.APP_ID == "DEFAULT_DO_NOT_USE") {
    configured = false
    logger.error('Unique package name not set, defaulting to "DEFAULT_DO_NOT_USE".')
}

// Log a final error message if we're unable to create a release key signed
// build for an app configured in the Play Developer Console. Apks built in this
// condition won't be able to call any of the BillingClient APIs.
if (!configured) {
    logger.error('The app could not be configured for release signing. In app purchases will not be testable. See `example/README.md` for more info and instructions.')
}

android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId project.APP_ID
        minSdkVersion 21
        targetSdkVersion 30
        versionCode project.VERSION_CODE
        versionName project.VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        signingConfigs {
            release {
                if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                    storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                    storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                    keyAlias System.getenv()["FCI_KEY_ALIAS"]
                    keyPassword System.getenv()["FCI_KEY_PASSWORD"]
                } else {
                    storeFile project.KEYSTORE_STORE_FILE
                    storePassword project.KEYSTORE_STORE_PASSWORD
                    keyAlias project.KEYSTORE_KEY_ALIAS
                    keyPassword project.KEYSTORE_KEY_PASSWORD
                }
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources false
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    //Firebase Analytics Dependency
    implementation 'com.google.firebase:firebase-analytics:18.0.1'
}
